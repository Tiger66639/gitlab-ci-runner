{"name":"Gitlab-ci-runner","tagline":"GitLab Runner PROJECT IS DEPRECATED NOW, PLEASE USE NEW GitLab Runner written in Go (previously named GitLab CI Multi Runner) INSTEAD","body":"## GitLab Runner PROJECT IS DEPRECATED NOW, PLEASE USE NEW [GitLab Runner written in Go (previously named GitLab CI Multi Runner)](https://gitlab.com/gitlab-org/gitlab-ci-multi-runner) INSTEAD\r\n\r\n## GitLab Runner\r\n\r\nThis is GitLab Runner repository, this application run tests and sends the results to GitLab CI.\r\n[GitLab CI](https://about.gitlab.com/gitlab-ci) is the open-source continuous integration server that coordinates the testing.\r\n\r\n[![build status](https://ci.gitlab.org/projects/8/status.png?ref=master)](https://ci.gitlab.org/projects/8?ref=master)\r\n[![Code Climate](https://codeclimate.com/github/gitlabhq/gitlab-ci-runner.png)](https://codeclimate.com/github/gitlabhq/gitlab-ci-runner)\r\n\r\n### Requirements\r\n\r\n### Omnibus packages and other platforms\r\n\r\nThe recommended way to install this runner are the Omnibus packages.\r\nGitLab runners are also available for all kinds of other platforms such as Windows and OSX.\r\nFor more information about both please see the runner section of the [GitLab CI page on the website](https://about.gitlab.com/gitlab-ci/).\r\n\r\n### Supported platforms\r\n\r\nThis projects officially support these Linux distributions:\r\n\r\n- Ubuntu\r\n- Debian\r\n- CentOS\r\n- Red Hat Enterprise Linux\r\n- Scientific Linux\r\n- Oracle Linux\r\n\r\nMac OSX and other POSIX operating systems are not supported but will work with adaptations.\r\nUnder Windows the runner will only work under POSIX compliant environments like Cygwin.\r\nAlso see the alternative Runners for Windows, Scala/Java and Node please see the runner section of the [GitLab CI page on the website](https://about.gitlab.com/gitlab-ci/).\r\n\r\n### Install dependencies\r\n\r\nThe easiest and recommended way to install the runner is with the [GitLab Runner Omnibus package](https://gitlab.com/gitlab-org/omnibus-gitlab-runner/blob/master/doc/install/README.md).\r\n\r\nInstall operating system dependent dependencies:\r\n\r\na) Linux\r\n\r\n```bash\r\nsudo apt-get update -y\r\nsudo apt-get install -y wget curl gcc libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev make build-essential zlib1g-dev openssh-server git-core libyaml-dev postfix libpq-dev libicu-dev\r\n```\r\n\r\nb) MacOSX (make sure you have [homebrew](http://brew.sh/) installed)\r\n\r\n```bash\r\nbrew install icu4c\r\n```\r\n\r\nInstall Ruby from source:\r\n\r\na) Linux\r\n\r\n```bash\r\nmkdir /tmp/ruby && cd /tmp/ruby\r\ncurl --progress http://cache.ruby-lang.org/pub/ruby/2.1/ruby-2.1.5.tar.gz | tar xz\r\ncd ruby-2.1.5\r\n./configure --disable-install-rdoc\r\nmake\r\nsudo make install\r\n```\r\n\r\nb) Mac OS X (make sure you have the Xcode command line tools installed), UNTESTED\r\n\r\n```bash\r\nbrew update\r\nbrew install rbenv\r\nbrew install ruby-build\r\nbrew install openssl\r\nCC=gcc-4.7 RUBY_CONFIGURE_OPTS=\"--with-openssl-dir=`brew --prefix openssl` --with-readline-dir=`brew --prefix readline` --with-gcc=gcc-4.7 --enable-shared\" rbenv install 2.0.0-p353\r\necho 'if which rbenv > /dev/null; then eval \"$(rbenv init -)\"; fi' >> ~/.profile\r\nrbenv global 2.0.0-p353\r\n```\r\n\r\n### Setup runners\r\n\r\n#### Create the runner user\r\n\r\nUbuntu:\r\n\r\n```\r\nsudo gem install bundler\r\nsudo adduser --disabled-login --gecos 'GitLab Runner' gitlab_ci_runner\r\n```\r\n\r\nCentos:\r\n\r\n```\r\nsudo groupadd gitlab_ci_runner\r\nsudo useradd -g gitlab_ci_runner gitlab_ci_runner\r\n```\r\n\r\n#### Clone the gitlab-ci-runner repository\r\n\r\n```\r\nsudo su gitlab_ci_runner\r\ncd ~/\r\ngit clone https://gitlab.com/gitlab-org/gitlab-ci-runner.git\r\ncd gitlab-ci-runner\r\ngit checkout VERSION_YOU_NEED # Ex. v5.0.0\r\n```\r\n\r\nInstall the gems for the runner:\r\n\r\n```\r\nbundle install --deployment\r\n```\r\n\r\nSetup the runner interactively:\r\n\r\n```\r\nbundle exec ./bin/setup\r\n```\r\n\r\nOR\r\n\r\nSetup the runner non-interactively:\r\n\r\n```\r\nCI_SERVER_URL=https://ci.example.com REGISTRATION_TOKEN=replaceme bundle exec ./bin/setup\r\n```\r\n\r\nThe registration token can be found at: <http://gitlab-ci-domain.com/admin/runners>, accessible through Header > Runners.\r\n\r\nBy default the configuration file for your new runner gets written in the directory where the gitlab-ci-runner source code was installed, e.g. in `/home/gitlab_ci_runner/gitlab-ci-runner/config.yml`.\r\nYou can tell `bin/setup` to use a different directory with the `-C` switch.\r\n\r\n```\r\nbin/setup -C /my/runner/working/directory\r\n```\r\n\r\nYou can also specify RUNNER_DESCRIPTION and RUNNER_TAG_LIST during setup.\r\n\r\nTo unlink the runner from the coordinator you can run following command:\r\n\r\n```\r\nbin/unlink\r\n```\r\n\r\nIt will remove the runner's information from the coordinator and remove the given token from the current runner\r\n\r\n#### Create an Upstart job (Ubuntu, Centos 6)\r\n\r\n```\r\nexit;\r\nsudo cp /home/gitlab_ci_runner/gitlab-ci-runner/lib/support/upstart/gitlab-ci-runner.conf /etc/init/\r\n```\r\n\r\n\r\n#### Set up an init.d script (other distributions)\r\n\r\n```\r\nexit;\r\nsudo cp /home/gitlab_ci_runner/gitlab-ci-runner/lib/support/init.d/gitlab_ci_runner /etc/init.d/gitlab-ci-runner\r\nsudo chmod +x /etc/init.d/gitlab-ci-runner\r\nsudo update-rc.d gitlab-ci-runner defaults 21\r\n```\r\n\r\n### Runners default file\r\n\r\n```\r\ncd /home/gitlab_ci_runner/gitlab-ci-runner\r\nsudo cp ./lib/support/init.d/gitlab_ci_runner.default.example /etc/default/gitlab_ci_runner\r\n```\r\n\r\n### Run\r\n\r\nUsing the system service with Upstart/init.d script:\r\n\r\n```bash\r\nsudo service gitlab-ci-runner start\r\n```\r\n\r\nOR\r\n\r\nManually:\r\n\r\n```bash\r\nsudo su gitlab_ci_runner\r\ncd /home/gitlab_ci_runner/gitlab-ci-runner\r\nbundle exec ./bin/runner\r\n```\r\n\r\nIf you are using a custom working directory you can tell the runner about it with the `-C` switch.\r\nThe default working directory is the directory where the gitlab-ci-runner source code was installed, e.g. `/home/gitlab_ci_runner/gitlab-ci-runner`.\r\n\r\n```\r\nbundle exec bin/runner -C /my/runner/working/directory\r\n```\r\n\r\n### Update\r\n\r\nIn order to update the runner to a new version just go to runner directory and do next:\r\n\r\n```bash\r\nsudo su gitlab_ci_runner\r\ncd ~/gitlab-ci-runner\r\ngit fetch\r\ngit checkout VERSION_YOU_NEED # Ex. v5.0.0\r\nbundle\r\n```\r\n\r\nAnd restart runner\r\n\r\n## Easily add Runners to existing GitLab CI\r\n\r\nSee [omnibus gitlab runner](https://gitlab.com/gitlab-org/omnibus-gitlab-runner/blob/master/doc/install/README.md).\r\n\r\n## Development\r\n\r\nTo work on the GitLab runner we recommend you install the [GitLab Development Kit](https://gitlab.com/gitlab-org/gitlab-development-kit).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}